Design Patterns: 

 

Design Pattern 1: Singleton Pattern 

Date: 12/7/23 

File: DatabaseConnectionFactory.py 
Lines: 6 - 11

A form of the Singleton Pattern is used in DatabaseConnectionFactory to ensure that only one instance of the database connection is created. The _instance variable helps maintain a single instance of the class. 

 

Factory Method Pattern: 

Date: 12/7/23 

File: DatabaseConnectionFactory.py 
Lines: 13 - 17

Although not explicitly a Factory Method Pattern, the DatabaseConnectionFactory acts similarly by providing a centralized way to create and manage instances of the database connection. It serves as a factory for obtaining database connections. 

 

Strategy Pattern: 

Date: 12/7/23 

File: TaskRecordValidator.py 
Lines: 4 - 18

The TaskRecordValidator class follows a strategy-like approach by encapsulating the date and time validation strategies in separate methods (verify_date and verify_time). The strategies can be easily extended or replaced without modifying the client code. 